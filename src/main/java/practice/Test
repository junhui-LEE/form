package test;
/*
열거형은 여러 상수를 선언해야 할때, 편리하게 성언할 수 있는 방법이다. 일반적으로 상수
를 선언할 때 다음과 같이 하는데, 이처럼 상수가 많을 때는 코드가 불필요하게 길어진다.
*/
/*
class Card{
	static final int CLOVER = 0;
	static final int HEART = 1;
	static final int DIAMOND = 2;
	static final int SPADE = 3;

	static final int TWO = 0;
	static final int THREE = 1;
	static final int FOUR = 2;

	final int kind;
	final int num;

	Card(int kind, int num){
		this.kind = kind; this.num = num;
	}
}
*/
/*
이럴때, 열거형을 이용하면 다음과 같이 간단히 상수를 선언할 수 있다. 위와 달리 따로 값을
지정해주지 않아도 자동적으로 0부터 시작하는 정수값이 할당된다. CLOVER의 값은 0이고
HEART는 1, DIAMOND는 2와 같은 식이다.
*/
class Card{
	enum Kind {CLOVER, HEART, DIAMOND, SPADE} // 열거형 Kind를 정의
	enum Value {ONE, TWO, THREE} // 열거형 Value를 정의
}

/*
그리고 이전의 코드에서는 아래와 같은 경우에 Card.CLOVER와 Card.TWO의 값이 0이라
서 조건식이 true가 되는데, 사실 카드의 무늬와 숫자는 비교 대상이 아니므로 이 조건식은
false가 되는 것이 맞다.
조건식 : if(Card.CLOVER == Card.TWO) // true이지만 false가 되는 것이 맞음.

열거형을 이용해서 상수를 정의한 경우는 값을 비교하기 전에 타입을 먼저 비교하므로 값이
같더라도 타입이 다르면 컴파일 에러가 발생한다.
조건식 : if(Card.Kind.CLOVER == Card.Value.TWO) // 컴파일에러 타입이 달라서 비교 불가
->enum + 타입이름(==enum클래스 이름, enum클래스 이름이 enum타입 이름이 된다.)

열거형 정의 방법 : 괄호{} 안에 상수의 이름을 나열하기만 하면 된다.
enum 열거형이름 {상수명1, 상수명2, ... }
열거형에 정의된 상수를 사용하는 방법은 '열거형이름.상수명' 이다.
*/
public class Test {
/*
	public static void main(String[] args) {
		Card card = new Card(1,2);
		if(card.CLOVER == card.TWO) System.out.println("true");
	}
*/
/*
	public static void main(String[] args) {
		if(Card.Kind.CLOVER == Card.Value.ONE) System.out.println("true");
	}
*/
	public static void main(String[] args) {
		System.out.println(Card.Kind.CLOVER);
		System.out.println(Card.Value.ONE);
	}
}